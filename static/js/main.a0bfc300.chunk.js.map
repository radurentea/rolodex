{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","robot","id","name","email","CardList","robots","map","x","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACpB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,aCHTC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAAAC,GAAC,OACjB,cAAC,EAAD,CAAiBP,MAAOO,GAAbA,EAAEN,UCJRO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEb,UAAU,SACVc,KAAM,SACNF,YAAcA,EACdG,SAAWF,MCmCAG,G,wDArCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,OAAQ,GACRW,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,OAAQmB,S,+BAOjC,IAAD,EACyBC,KAAKN,MAA7Bd,EADD,EACCA,OAAQW,EADT,EACSA,YACVU,EAAiBrB,EAAOsB,QAAO,SAAA3B,GACnC,OAAOA,EAAME,KAAK0B,cAAcC,SAASb,EAAYY,kBAEvD,OACE,sBAAK/B,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACEY,YAAY,gBACZC,aAAee,KAAKf,eAEtB,cAAC,EAAD,CAAUL,OAASqB,W,GAhCTI,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a0bfc300.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n      <img alt=\"robot\" src={`https://robohash.org/${props.robot.id}?set=set1&size=180x180`}/>\n      <h2>{props.robot.name}</h2>\n      <p>{props.robot.email}</p>\n    </div>\n  );","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card-component';\n\nexport const CardList = props => (\n    <div className=\"card-list\">\n      {props.robots.map(x => (\n        <Card key={x.id} robot={x}/>\n      ))}\n    </div>\n  );","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input \n    className='search'\n    type= 'search'\n    placeholder={ placeholder }\n    onChange={ handleChange }\n  />\n)","import React from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      robots: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='Search robots'\n          handleChange={ this.handleChange }\n        />\n        <CardList robots={ filteredRobots }/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}